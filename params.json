{"name":"FIXP-specification","tagline":"A FIX standard for high performance message exchange","body":"FIX Performance Session Layer (FIXP) is a lightweight protocol designed to replace the traditional FIX session protocol (known officially as FIXT) for high performance use cases. It supports both point-to-point exchange of application messages as well as multicasts for market data and the like. \r\n\r\n### Performance\r\nThe goal of this effort was to create an enhanced session protocol that can provide reliable, highly efficient, exchange of messages to support high performance financial messaging, over a variety of transports. The protocol is fit for purpose for current high message rates, low latency environments in financial markets, but should be to every extent possible applicable to other business domains. \r\n\r\n### Protocol Layering\r\nThis standard endeavors to maintain a clear separation of protocol layers, as expressed by the Open Systems Interconnection model (OSI).  The responsibilities of a session layer are establishment, termination and restart procedures and rules for the exchange of application messages.\r\n\r\nThe protocol shall be independent of message encoding (presentation layer), to provide the maximum utility. Encoding independence applies both to session layer messages specified in this document as well as to application messages. Implementation may be simpler if session protocol messages are encoded the same way as application messages, but that is not a requirement of this session protocol.\r\n\r\nFIXP is transport independent; it works on TCP streams as well as datagram oriented transports.\r\n\r\nUnlike the traditional FIX session layer protocol, FIXP does not impose a verbose header on application messages.\r\n\r\n### Appropriate Delivery Guarantees\r\n\r\nFIXP supports a choice of message flow types: \r\n\r\n* Recoverable (missed messages are retransmitted)\r\n* Unsequenced (sequencing not needed at the session layer because it is provided at another layer)\r\n* Idempotent (operations guaranteed to be applied only once)\r\n* None (for a one-way flow of messages). \r\n\r\nThe protocol supports asymmetric flows, such as an idempotent flow of orders into a market with recoverable execution reports outbound.\r\n\r\n### Point-to-Point and Multicast Communications\r\nFIXP allows the communication of messages to multiple receivers (multicast) for applications such as market data as well as point-to-point communications. \r\n\r\n### Session Lifetime\r\nSession creation is cheap, and each session is identified by a statistically unique identifier. FIXP separates session identifier from business entity identifiers. \r\n\r\nSessions with recoverable flows have an explicit end of logical flow, as distinguished from simple unbinding of its transport. Sessions that have not reached their logical end may be re-established and re-synchronized. \r\nOn the other hand, a non-recoverable session ends when its transport is terminated. Subsequent message exchange is achieved by negotiating a new session with a new session ID.\r\n\r\n### Message Sequencing\r\nFIXP only sequences application messages, not session layer messages. This makes message recovery deterministic, and by design, sequencing issues do not cause problems with session establishment. On reliable TCP streams the sequencing is implicit after a market message and on unreliable streams such as UDP, the sequencing is per packet.\r\n\r\n### Authors and Contributors\r\nThe FIXP standard was developed by the High Performance Working Group of FIX Trading Communityâ„¢, the non-profit, industry-driven standards body at the heart of global trading.\r\n\r\n### Implementations\r\nWe will post links to open source implementations of FIXP. Implementors, contact one of the owners of the FIXTradingCommunity/fixp-specification repository.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}